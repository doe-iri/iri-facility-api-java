{
  "openapi": "3.1.0",
  "info": {
    "title": "IRI Facility API",
    "description": "This API implements the standard integrated research infrastructure specification for facility status.",
    "termsOfService": "IRI Facility API Copyright (c) 2025. The Regents of the University of California, through Lawrence Berkeley National Laboratory (subject to receipt of any required approvals from the U.S. Dept. of Energy).  All rights reserved.",
    "contact": {
      "name": "The IRI Interfaces Subcommittee",
      "url": "https://iri.science/ts/interfaces/",
      "email": "software@es.net"
    },
    "license": {
      "name": "The 3-Clause BSD License",
      "url": "https://opensource.org/license/bsd-3-clause/"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://localhost:8081",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "IRI Facility Status API",
      "description": "Integrated Research Infrastructure Facility Status API endpoint"
    }
  ],
  "paths": {
    "/api/v1/status": {
      "get": {
        "tags": [
          "IRI Facility Status API",
          "getMetaData"
        ],
        "summary": "Get a list of facility status meta-data.",
        "description": "Returns a list of available facility status URL.",
        "operationId": "getMetaData",
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Discovery"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/facility": {
      "get": {
        "tags": [
          "getFacility",
          "IRI Facility Status API"
        ],
        "summary": "Get the facility resource associated with this endpoint.",
        "description": "Returns the facility resource associated with this endpoint.",
        "operationId": "getFacility",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Facility"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/facility/sites/{id}/location": {
      "get": {
        "tags": [
          "getLocationBySite",
          "IRI Facility Status API"
        ],
        "summary": "Get the location related to the specified site.",
        "description": "Returns the location related to the specified site.",
        "operationId": "getLocationBySite",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provider is not currently capable of serving resource models.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/sites/{id}/location": {
      "get": {
        "tags": [
          "getLocationBySite",
          "IRI Facility Status API"
        ],
        "summary": "Get the location related to the specified site.",
        "description": "Returns the location related to the specified site.",
        "operationId": "getLocationBySite_1",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provider is not currently capable of serving resource models.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/sites/{id}": {
      "get": {
        "tags": [
          "IRI Facility Status API",
          "getSite"
        ],
        "summary": "Get the site associated with the specified id.",
        "description": "Returns the site matching the specified id.",
        "operationId": "getSite",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The UUID uniquely identifying the IRI resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provider is not currently capable of serving resource models.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/facility/sites/{id}": {
      "get": {
        "tags": [
          "IRI Facility Status API",
          "getSite"
        ],
        "summary": "Get the site associated with the specified id.",
        "description": "Returns the site matching the specified id.",
        "operationId": "getSite_1",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The UUID uniquely identifying the IRI resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provider is not currently capable of serving resource models.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/sites": {
      "get": {
        "tags": [
          "getSites",
          "IRI Facility Status API"
        ],
        "summary": "Get a list of sites associated with a facility.",
        "description": "Returns a list of IRI resources matching the query.",
        "operationId": "getSites",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "short_name",
            "in": "query",
            "description": "The short name of the resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Site"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/facility/sites": {
      "get": {
        "tags": [
          "getSites",
          "IRI Facility Status API"
        ],
        "summary": "Get a list of sites associated with a facility.",
        "description": "Returns a list of IRI resources matching the query.",
        "operationId": "getSites_1",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "short_name",
            "in": "query",
            "description": "The short name of the resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Site"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/facility/resources/{id}": {
      "get": {
        "tags": [
          "getResource",
          "IRI Facility Status API"
        ],
        "summary": "Get the IRI resource associated with the specified id.",
        "description": "Returns the matching IRI resource.",
        "operationId": "getResource",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resource"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provider is not currently capable of serving resource models.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/resources/{id}": {
      "get": {
        "tags": [
          "getResource",
          "IRI Facility Status API"
        ],
        "summary": "Get the IRI resource associated with the specified id.",
        "description": "Returns the matching IRI resource.",
        "operationId": "getResource_1",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resource"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provider is not currently capable of serving resource models.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/resources": {
      "get": {
        "tags": [
          "getResources",
          "IRI Facility Status API"
        ],
        "summary": "Get a collection of IRI resources.",
        "description": "Returns a list of IRI resources matching the query.",
        "operationId": "getResources",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "The group parameter will filter resources based on group membership.  If group is specified then only resources that are a member of the specified group will be returned.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Return only resources of this type.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "short_name",
            "in": "query",
            "description": "The short name of the resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "current_status",
            "in": "query",
            "description": "Return only resources with these status values.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Resource"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/facility/resources": {
      "get": {
        "tags": [
          "getResources",
          "IRI Facility Status API"
        ],
        "summary": "Get a collection of IRI resources.",
        "description": "Returns a list of IRI resources matching the query.",
        "operationId": "getResources_1",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "The group parameter will filter resources based on group membership.  If group is specified then only resources that are a member of the specified group will be returned.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Return only resources of this type.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "short_name",
            "in": "query",
            "description": "The short name of the resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "current_status",
            "in": "query",
            "description": "Return only resources with these status values.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Resource"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/locations": {
      "get": {
        "tags": [
          "IRI Facility Status API",
          "getLocations"
        ],
        "summary": "Get a list of locations associated with a facility.",
        "description": "Returns a list of locations matching the query.",
        "operationId": "getLocations",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/facility/locations": {
      "get": {
        "tags": [
          "IRI Facility Status API",
          "getLocations"
        ],
        "summary": "Get a list of locations associated with a facility.",
        "description": "Returns a list of locations matching the query.",
        "operationId": "getLocations_1",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/incidents/{id}/events": {
      "get": {
        "tags": [
          "IRI Facility Status API",
          "getEventsByIncident"
        ],
        "summary": "Get the events associated with the specified incident.",
        "description": "RReturns the events associated with the specified incident.",
        "operationId": "getEventsByIncident",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "short_name",
            "in": "query",
            "description": "The short name of the resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provider is not currently capable of serving resource models.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/facility/incidents/{id}/events": {
      "get": {
        "tags": [
          "IRI Facility Status API",
          "getEventsByIncident"
        ],
        "summary": "Get the events associated with the specified incident.",
        "description": "RReturns the events associated with the specified incident.",
        "operationId": "getEventsByIncident_1",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "short_name",
            "in": "query",
            "description": "The short name of the resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provider is not currently capable of serving resource models.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/incidents/{id}": {
      "get": {
        "tags": [
          "getIncident",
          "IRI Facility Status API"
        ],
        "summary": "Get the incident resource associated with the specified id.",
        "description": "Returns the matching incident resource.",
        "operationId": "getIncident",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provider is not currently capable of serving resource models.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/facility/incidents/{id}": {
      "get": {
        "tags": [
          "getIncident",
          "IRI Facility Status API"
        ],
        "summary": "Get the incident resource associated with the specified id.",
        "description": "Returns the matching incident resource.",
        "operationId": "getIncident_1",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provider is not currently capable of serving resource models.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/facility/incidents": {
      "get": {
        "tags": [
          "IRI Facility Status API",
          "getIncidents"
        ],
        "summary": "Get a list of available incident resources.",
        "description": "Returns a list of incident resources matching the specified query",
        "operationId": "getIncidents",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of a resource.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The status of a resource.",
              "enum": [
                "up",
                "degraded",
                "down",
                "unknown"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of incident.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The type of incident.",
              "enum": [
                "planned",
                "unplanned",
                "reservation"
              ]
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "The type of resolution to the incident.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The current state of the incident resolution.",
              "enum": [
                "unresolved",
                "cancelled",
                "completed",
                "extended",
                "pending"
              ]
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "Search for incidents overlapping with time, where start <= time <= end.  The time query parameter must be in ISO 8601 format with timezone offsets.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "short_name",
            "in": "query",
            "description": "The short name of the resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Incident"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/incidents": {
      "get": {
        "tags": [
          "IRI Facility Status API",
          "getIncidents"
        ],
        "summary": "Get a list of available incident resources.",
        "description": "Returns a list of incident resources matching the specified query",
        "operationId": "getIncidents_1",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of a resource.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The status of a resource.",
              "enum": [
                "up",
                "degraded",
                "down",
                "unknown"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of incident.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The type of incident.",
              "enum": [
                "planned",
                "unplanned",
                "reservation"
              ]
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "The type of resolution to the incident.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The current state of the incident resolution.",
              "enum": [
                "unresolved",
                "cancelled",
                "completed",
                "extended",
                "pending"
              ]
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "Search for incidents overlapping with time, where start <= time <= end.  The time query parameter must be in ISO 8601 format with timezone offsets.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "short_name",
            "in": "query",
            "description": "The short name of the resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Incident"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/events/{id}/resource": {
      "get": {
        "tags": [
          "getResourceByEvent",
          "IRI Facility Status API"
        ],
        "summary": "Get the resource impacted by the specified event.",
        "description": "Returns the resource impacted by the specified event.",
        "operationId": "getResourceByEvent",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resource"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provider is not currently capable of serving resource models.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/facility/events/{id}/resource": {
      "get": {
        "tags": [
          "getResourceByEvent",
          "IRI Facility Status API"
        ],
        "summary": "Get the resource impacted by the specified event.",
        "description": "Returns the resource impacted by the specified event.",
        "operationId": "getResourceByEvent_1",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resource"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provider is not currently capable of serving resource models.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/facility/events/{id}/incident": {
      "get": {
        "tags": [
          "getIncidentByEvent",
          "IRI Facility Status API"
        ],
        "summary": "Get the incident related to the specified event.",
        "description": "Returns the incident related to the specified event.",
        "operationId": "getIncidentByEvent",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provider is not currently capable of serving resource models.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/events/{id}/incident": {
      "get": {
        "tags": [
          "getIncidentByEvent",
          "IRI Facility Status API"
        ],
        "summary": "Get the incident related to the specified event.",
        "description": "Returns the incident related to the specified event.",
        "operationId": "getIncidentByEvent_1",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provider is not currently capable of serving resource models.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/events/{id}": {
      "get": {
        "tags": [
          "getEvent",
          "IRI Facility Status API"
        ],
        "summary": "Get the event associated with the specified id.",
        "description": "Returns the event associated with the specified id.",
        "operationId": "getEvent",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provider is not currently capable of serving resource models.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/facility/events/{id}": {
      "get": {
        "tags": [
          "getEvent",
          "IRI Facility Status API"
        ],
        "summary": "Get the event associated with the specified id.",
        "description": "Returns the event associated with the specified id.",
        "operationId": "getEvent_1",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provider is not currently capable of serving resource models.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/facility/events": {
      "get": {
        "tags": [
          "getEvents",
          "IRI Facility Status API"
        ],
        "summary": "Get a list of event resources.",
        "description": "Returns a list of event resources matching the specified query",
        "operationId": "getEvents",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of a resource.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The status of a resource.",
              "enum": [
                "up",
                "degraded",
                "down",
                "unknown"
              ]
            }
          },
          {
            "name": "short_name",
            "in": "query",
            "description": "The short name of the resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/events": {
      "get": {
        "tags": [
          "getEvents",
          "IRI Facility Status API"
        ],
        "summary": "Get a list of event resources.",
        "description": "Returns a list of event resources matching the specified query",
        "operationId": "getEvents_1",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Provides media types that are acceptable for the response. At the moment application/json is the supported response encoding.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "The HTTP request may contain the If-Modified-Since header requesting all models with creationTime after the specified date. The date must be specified in RFC 1123 format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of a resource.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The status of a resource.",
              "enum": [
                "up",
                "degraded",
                "down",
                "unknown"
              ]
            }
          },
          {
            "name": "short_name",
            "in": "query",
            "description": "The short name of the resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A list of relationships to dereference and include as embedded objects.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of available IRI resources matching the request criteria.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The HTTP Location header is an entity-header that gives another location for  the data that is returned and also tells how to access the resource by indicating the direct URL.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - The requested resource was not modified.",
            "headers": {
              "Last-Modified": {
                "description": "The HTTP response should contain the Last-Modified header with the date set to the RFC 1123 format of the resource's last modified time.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server due to malformed syntax or invalid query parameters could not understand the clientâ€™s request.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requester is not authorized to access the requested resource.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - A generic error message given when an unexpected condition was encountered and a more specific message is not available.",
            "headers": {
              "Content-Type": {
                "description": "Provides media type used to encode the result of the operation based on those values provided in the Accept request header. At the moment application/json is the only supported Content-Type encoding.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Discovery": {
        "type": "object",
        "description": "Defines discovery resource for modelling meta-data.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier associated with resource at the target link.",
            "example": "facility"
          },
          "version": {
            "type": "string",
            "description": "Version of the resource based on API version",
            "example": "v1"
          },
          "link": {
            "$ref": "#/components/schemas/Link",
            "description": "A link to the resources."
          }
        }
      },
      "Link": {
        "type": "object",
        "description": "Link represents a hyperlink with relation (rel), URL (href), and type.",
        "properties": {
          "rel": {
            "type": "string",
            "description": "The relationship type of the link",
            "example": "self"
          },
          "href": {
            "type": "string",
            "format": "uri",
            "description": "The hyperlink reference (URI)",
            "example": "https://example.com/facility"
          },
          "type": {
            "type": "string",
            "description": "The media type of the linked resource",
            "example": "application/json"
          }
        },
        "required": [
          "href"
        ]
      },
      "Error": {
        "type": "object",
        "description": "Error structure for REST interface.",
        "properties": {
          "error": {
            "type": "string",
            "description": "A short error description."
          },
          "description": {
            "type": "string",
            "description": "Longer error description, human-readable."
          },
          "uri": {
            "type": "string",
            "description": "URI to a detailed error description on the API developer website."
          }
        }
      },
      "Event": {
        "type": "object",
        "description": "Defines a resource impacting event and provides status log functionality.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the object.  Typically a UUID or URN to provide global uniqueness across facilities.",
            "example": "09a22593-2be8-46f6-ae54-2904b04e13a4"
          },
          "name": {
            "type": "string",
            "description": "The long name of the resource.",
            "example": "Lawrence Berkeley National Laboratory"
          },
          "short_name": {
            "type": "string",
            "description": "The short name of the resource.",
            "example": "LBNL"
          },
          "description": {
            "type": "string",
            "description": "A description of the resource.",
            "example": "Lawrence Berkeley National Laboratory is charged with conducting unclassified research across a wide range of scientific disciplines."
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "The date this resource was last modified. Format follows the ISO 8601 standard with timezone offsets.",
            "example": "2025-03-11T07:28:24.000âˆ’00:00"
          },
          "_links": {
            "type": "array",
            "description": "A list of links to other resources with defined relationships such as locatedAt, hostedAt, hasIncident, hasEvent, hasResource, hasDependent, dependsOn, impacts.",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "status": {
            "type": "string",
            "description": "The status of the resource associated with this incident.",
            "enum": [
              "up",
              "degraded",
              "down",
              "unknown"
            ],
            "example": "down"
          },
          "occurred_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date this event occurred.  Format follows the ISO 8601 standard with timezone offsets.",
            "example": "2025-03-11T07:28:24.000âˆ’00:00"
          },
          "_embedded": {
            "$ref": "#/components/schemas/EventEmbedded",
            "description": "A set of embedded objects that were requested via the 'include' query parameter."
          }
        },
        "required": [
          "id"
        ]
      },
      "EventEmbedded": {
        "type": "object",
        "description": "Defines a resource that has a reportable status and its associated dependencies.",
        "properties": {
          "generatedBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Incident"
            }
          },
          "impacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            }
          }
        }
      },
      "Facility": {
        "type": "object",
        "description": "A DoE laboratory or production facility that offers resources for programmatic consumption.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the object.  Typically a UUID or URN to provide global uniqueness across facilities.",
            "example": "09a22593-2be8-46f6-ae54-2904b04e13a4"
          },
          "name": {
            "type": "string",
            "description": "The long name of the resource.",
            "example": "Lawrence Berkeley National Laboratory"
          },
          "short_name": {
            "type": "string",
            "description": "The short name of the resource.",
            "example": "LBNL"
          },
          "description": {
            "type": "string",
            "description": "A description of the resource.",
            "example": "Lawrence Berkeley National Laboratory is charged with conducting unclassified research across a wide range of scientific disciplines."
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "The date this resource was last modified. Format follows the ISO 8601 standard with timezone offsets.",
            "example": "2025-03-11T07:28:24.000âˆ’00:00"
          },
          "_links": {
            "type": "array",
            "description": "A list of links to other resources with defined relationships such as locatedAt, hostedAt, hasIncident, hasEvent, hasResource, hasDependent, dependsOn, impacts.",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "organization_name": {
            "type": "string",
            "description": "The name of the organization hosting the facility.",
            "example": "Lawrence Berkeley National Laboratory"
          },
          "_embedded": {
            "$ref": "#/components/schemas/FacilityEmbedded",
            "description": "A set of embedded objects that were requested via the 'include' query parameter."
          }
        },
        "required": [
          "id"
        ]
      },
      "FacilityEmbedded": {
        "type": "object",
        "description": "Defines a resource that has a reportable status and its associated dependencies.",
        "properties": {
          "hostedAt": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Site"
            }
          },
          "hasLocation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            }
          },
          "hasIncident": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Incident"
            }
          },
          "hasEvent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          },
          "hasResource": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            }
          }
        }
      },
      "Incident": {
        "type": "object",
        "description": "An incident groups events in time and across resources.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the object.  Typically a UUID or URN to provide global uniqueness across facilities.",
            "example": "09a22593-2be8-46f6-ae54-2904b04e13a4"
          },
          "name": {
            "type": "string",
            "description": "The long name of the resource.",
            "example": "Lawrence Berkeley National Laboratory"
          },
          "short_name": {
            "type": "string",
            "description": "The short name of the resource.",
            "example": "LBNL"
          },
          "description": {
            "type": "string",
            "description": "A description of the resource.",
            "example": "Lawrence Berkeley National Laboratory is charged with conducting unclassified research across a wide range of scientific disciplines."
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "The date this resource was last modified. Format follows the ISO 8601 standard with timezone offsets.",
            "example": "2025-03-11T07:28:24.000âˆ’00:00"
          },
          "_links": {
            "type": "array",
            "description": "A list of links to other resources with defined relationships such as locatedAt, hostedAt, hasIncident, hasEvent, hasResource, hasDependent, dependsOn, impacts.",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "status": {
            "type": "string",
            "description": "The status of the resource associated with this incident.",
            "enum": [
              "up",
              "degraded",
              "down",
              "unknown"
            ],
            "example": "down"
          },
          "type": {
            "type": "string",
            "description": "The type of incident.",
            "enum": [
              "planned",
              "unplanned",
              "reservation"
            ],
            "example": "planned"
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "description": "The date this incident started, or is predicted to start. Format follows the ISO 8601 standard with timezone offsets.",
            "example": "2023-10-17T11:02:31.690-00:00"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "description": "The date this incident ended, or is predicted to end.  Format follows the ISO 8601 standard with timezone offsets.",
            "example": "2023-10-19T11:02:31.690-00:00"
          },
          "resolution": {
            "type": "string",
            "default": "pending",
            "description": "The resolution for this incident.",
            "enum": [
              "unresolved",
              "cancelled",
              "completed",
              "extended",
              "pending"
            ],
            "example": "pending"
          },
          "_embedded": {
            "$ref": "#/components/schemas/IncidentEmbedded",
            "description": "A set of embedded objects that were requested via the 'include' query parameter."
          }
        },
        "required": [
          "id"
        ]
      },
      "IncidentEmbedded": {
        "type": "object",
        "description": "The allowable embedded objects for Incident.",
        "properties": {
          "hasEvent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          },
          "mayImpact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            }
          }
        }
      },
      "Location": {
        "type": "object",
        "description": "A location models the geographical location or region with which resources are associated.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the object.  Typically a UUID or URN to provide global uniqueness across facilities.",
            "example": "09a22593-2be8-46f6-ae54-2904b04e13a4"
          },
          "name": {
            "type": "string",
            "description": "The long name of the resource.",
            "example": "Lawrence Berkeley National Laboratory"
          },
          "short_name": {
            "type": "string",
            "description": "The short name of the resource.",
            "example": "LBNL"
          },
          "description": {
            "type": "string",
            "description": "A description of the resource.",
            "example": "Lawrence Berkeley National Laboratory is charged with conducting unclassified research across a wide range of scientific disciplines."
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "The date this resource was last modified. Format follows the ISO 8601 standard with timezone offsets.",
            "example": "2025-03-11T07:28:24.000âˆ’00:00"
          },
          "_links": {
            "type": "array",
            "description": "A list of links to other resources with defined relationships such as locatedAt, hostedAt, hasIncident, hasEvent, hasResource, hasDependent, dependsOn, impacts.",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "country_name": {
            "type": "string",
            "description": "The country name of the location.",
            "example": "United States of America"
          },
          "locality_name": {
            "type": "string",
            "description": "The city or locality name of the location.",
            "example": "Berkeley"
          },
          "state_or_province_name": {
            "type": "string",
            "description": "The state or province name of the location.",
            "example": "California"
          },
          "street_address": {
            "type": "string",
            "description": "The street address of the location.",
            "example": 1
          },
          "unlocode": {
            "type": "string",
            "description": "The United Nations code for trade and transport locations.",
            "example": "US JBK"
          },
          "altitude": {
            "type": "number",
            "format": "double",
            "description": "The altitude of the location.",
            "example": 240
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "The latitude of the location.",
            "example": 37.87492
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "The longitude of the location.",
            "example": -122.2529
          },
          "_embedded": {
            "$ref": "#/components/schemas/LocationEmbedded",
            "description": "A set of embedded objects that were requested via the 'include' query parameter."
          }
        },
        "required": [
          "id"
        ]
      },
      "LocationEmbedded": {
        "type": "object",
        "description": "Defines a resource that has a reportable status and its associated dependencies.",
        "properties": {
          "hasSite": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Site"
            }
          }
        }
      },
      "Resource": {
        "type": "object",
        "description": "Defines a resource that has a reportable status and its associated dependencies.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the object.  Typically a UUID or URN to provide global uniqueness across facilities.",
            "example": "09a22593-2be8-46f6-ae54-2904b04e13a4"
          },
          "name": {
            "type": "string",
            "description": "The long name of the resource.",
            "example": "Lawrence Berkeley National Laboratory"
          },
          "short_name": {
            "type": "string",
            "description": "The short name of the resource.",
            "example": "LBNL"
          },
          "description": {
            "type": "string",
            "description": "A description of the resource.",
            "example": "Lawrence Berkeley National Laboratory is charged with conducting unclassified research across a wide range of scientific disciplines."
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "The date this resource was last modified. Format follows the ISO 8601 standard with timezone offsets.",
            "example": "2025-03-11T07:28:24.000âˆ’00:00"
          },
          "_links": {
            "type": "array",
            "description": "A list of links to other resources with defined relationships such as locatedAt, hostedAt, hasIncident, hasEvent, hasResource, hasDependent, dependsOn, impacts.",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "type": {
            "type": "string",
            "description": "The type of resource.",
            "enum": [
              "website",
              "service",
              "compute",
              "system",
              "storage",
              "network",
              "unknown"
            ],
            "example": "system"
          },
          "group": {
            "type": "string",
            "description": "The member resource group.",
            "example": "PERLMUTTER"
          },
          "current_status": {
            "type": "string",
            "description": "The current status of this resource a time of query.",
            "enum": [
              "up",
              "degraded",
              "down",
              "unknown"
            ],
            "example": "up"
          },
          "_embedded": {
            "$ref": "#/components/schemas/ResourceEmbedded",
            "description": "A set of embedded objects that were requested via the 'include' query parameter."
          }
        },
        "required": [
          "id"
        ]
      },
      "ResourceEmbedded": {
        "type": "object",
        "description": "The allowable embedded objects for Resource.",
        "properties": {
          "memberOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Facility"
            }
          },
          "locatedAt": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Site"
            }
          },
          "hasIncident": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Incident"
            }
          },
          "impactedBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          },
          "dependsOn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            }
          },
          "hasDependent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            }
          }
        }
      },
      "Site": {
        "type": "object",
        "description": "The location of a resource that has an associated physical location and an operating organization.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the object.  Typically a UUID or URN to provide global uniqueness across facilities.",
            "example": "09a22593-2be8-46f6-ae54-2904b04e13a4"
          },
          "name": {
            "type": "string",
            "description": "The long name of the resource.",
            "example": "Lawrence Berkeley National Laboratory"
          },
          "short_name": {
            "type": "string",
            "description": "The short name of the resource.",
            "example": "LBNL"
          },
          "description": {
            "type": "string",
            "description": "A description of the resource.",
            "example": "Lawrence Berkeley National Laboratory is charged with conducting unclassified research across a wide range of scientific disciplines."
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "The date this resource was last modified. Format follows the ISO 8601 standard with timezone offsets.",
            "example": "2025-03-11T07:28:24.000âˆ’00:00"
          },
          "_links": {
            "type": "array",
            "description": "A list of links to other resources with defined relationships such as locatedAt, hostedAt, hasIncident, hasEvent, hasResource, hasDependent, dependsOn, impacts.",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "operating_organization": {
            "type": "string",
            "description": "The name of the organization operating the site.",
            "example": "Lawrence Berkeley National Laboratory"
          },
          "_embedded": {
            "$ref": "#/components/schemas/SiteEmbedded",
            "description": "A set of embedded objects that were requested via the 'include' query parameter."
          }
        },
        "required": [
          "id"
        ]
      },
      "SiteEmbedded": {
        "type": "object",
        "description": "Defines a resource that has a reportable status and its associated dependencies.",
        "properties": {
          "hasLocation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            }
          },
          "hasResource": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            }
          }
        }
      }
    }
  }
}
